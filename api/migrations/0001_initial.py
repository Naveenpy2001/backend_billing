# Generated by Django 5.2.3 on 2025-08-22 08:51

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_minutes', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('shop_name', models.CharField(max_length=225)),
                ('username', models.CharField(max_length=225)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gst_number', models.CharField(blank=True, max_length=225, null=True)),
                ('phone', models.CharField(max_length=225)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('address', models.TextField(blank=True, null=True)),
                ('upi_id', models.CharField(blank=True, max_length=100, null=True)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('show_customer_details', models.BooleanField(default=True)),
                ('print_automatically', models.BooleanField(default=False)),
                ('show_signature', models.BooleanField(default=True)),
                ('referred_by', models.CharField(blank=True, max_length=225, null=True)),
                ('plan_status', models.CharField(default='inactive', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AddCustomers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225)),
                ('phone', models.CharField(max_length=225)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=225)),
                ('city', models.CharField(max_length=225)),
                ('state', models.CharField(max_length=225)),
                ('zip', models.CharField(max_length=225)),
                ('country', models.CharField(max_length=225)),
                ('customerType', models.CharField(choices=[('retail', 'Retail Customer'), ('wholesale', 'Wholesale Customer'), ('business', 'Business Customer')], default='retail', max_length=225)),
                ('taxId', models.CharField(max_length=225)),
                ('notes', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('can_activate_customer', 'Can activate customer'), ('can_deactivate_customer', 'Can deactivate customer')],
            },
        ),
        migrations.CreateModel(
            name='AddVendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(default='India', max_length=50)),
                ('vendor_type', models.CharField(choices=[('supplier', 'Supplier'), ('manufacturer', 'Manufacturer'), ('distributor', 'Distributor')], default='supplier', max_length=20)),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendors',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=225)),
                ('account_number', models.CharField(max_length=50)),
                ('ifsc_code', models.CharField(max_length=20)),
                ('branch', models.CharField(blank=True, max_length=225, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_details', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BillSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(default='Your Business Name', max_length=100)),
                ('subheader', models.CharField(default='Your Business Slogan', max_length=100)),
                ('footer', models.CharField(default='Thank you for your business!', max_length=200)),
                ('tax_enabled', models.BooleanField(default=True)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=18.0, max_digits=5)),
                ('discount_enabled', models.BooleanField(default=False)),
                ('print_automatically', models.BooleanField(default=False)),
                ('show_logo', models.BooleanField(default=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='bill_settings/logos/')),
                ('show_signature', models.BooleanField(default=True)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='bill_settings/signatures/')),
                ('gst_number', models.CharField(blank=True, default='', max_length=50)),
                ('upi_id', models.CharField(blank=True, default='', max_length=100)),
                ('terms_and_conditions', models.TextField(default='Goods once sold will not be taken back.')),
                ('show_customer_details', models.BooleanField(default=True)),
                ('default_payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('upi', 'UPI'), ('other', 'Other')], default='cash', max_length=20)),
                ('default_currency', models.CharField(default='INR', max_length=3)),
                ('default_category', models.CharField(blank=True, default='', max_length=50)),
                ('default_unit', models.CharField(blank=True, default='', max_length=20)),
                ('default_gst_rate', models.CharField(default='18', max_length=5)),
                ('tax_type_on_sale', models.CharField(choices=[('inclusive', 'Inclusive'), ('exclusive', 'Exclusive')], default='inclusive', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bill_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('size', models.BigIntegerField()),
                ('backup_type', models.CharField(choices=[('full', 'Full Backup'), ('partial', 'Partial Backup')], max_length=10)),
                ('file', models.FileField(upload_to='backups/')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('product_name', models.CharField(max_length=255)),
                ('category', models.CharField(blank=True, max_length=225, null=True)),
                ('unit', models.CharField(blank=True, max_length=225, null=True)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('min_stock_level', models.PositiveIntegerField(default=0)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('supplier', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('sale_date', models.DateTimeField(auto_now_add=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('customer_address', models.TextField(blank=True, null=True)),
                ('customer_gst', models.CharField(blank=True, max_length=15, null=True)),
                ('customer_state', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_state_code', models.CharField(blank=True, max_length=20, null=True)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('taxable_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_method', models.CharField(default='cash', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('include_gst', models.BooleanField(default=True)),
                ('sold_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('product_name', models.CharField(blank=True, max_length=225, null=True)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('taxable_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.sale')),
            ],
        ),
        migrations.CreateModel(
            name='TermsAndConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('Open', 'Open'), ('In Progress', 'In Progress'), ('Resolved', 'Resolved'), ('Closed', 'Closed')], default='Open', max_length=20)),
                ('priority', models.IntegerField(choices=[(1, '1 - Lowest'), (2, '2 - Low'), (3, '3 - Medium'), (4, '4 - High'), (5, '5 - Highest')], default=3)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_feedback', models.TextField(blank=True, null=True)),
                ('feedback_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TicketAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='ticket_attachments/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='api.ticket')),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField()),
                ('payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(default='active', max_length=50)),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
